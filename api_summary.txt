환자만들기(return : patient_general 생성된 환자정보)
url : api/mk_patient(patient)
patient
birth_date : date(yyyy-mm-dd)
sex : int(0,1)
emp_id : int
admin_date : str (yyyy-mm-dd hh:mm:ss)


모든 환자 불러오기(return : list(patient_general) 모든 환자 정보)
ulr : api/patients 

환자 한명 불러오기(return : patient_general p_id 검색된 환자 정보)
url : api/patients/p_id

환자 한명의 모든 기록 불러오기(return : record_all_view 형식의 환자 한명 모든정보)
url : record/p_id

모든 환자의 모든 기록(return : record_all_view 형식의 모든 환자 모든 정보)
url : get_all_record *2월 27일 수정

한명의 환자의 최근 정보(return : record_all_view 형식의 선택한 환자의 최근 하나의 정보)
url : get_latest_all/pid

모든 환자의 최근 정보(return : record_all_view형식의 모든 환자 최근 정보)
url : get_latest_all
(url : all_from_view 쓰면 5명 다나오는데, get_latest_all 쓰면 정철씨가안나와....)


모든 패혈증 환자의 최근 정보(return : record_all_view형식의 모든 패혈증 환자 최근 정보)
url : get_latest_sepsis_all 

선택한 환자의 선택한 날짜의 모든 레코드(return : record_all_view 형식의 해당 환자 해당 날짜 정보)
url : get_select_date?pid={pid}&input_time={date}

선택한 환자의 선택한 시간의 모든 레코드1개(return : record_all_view 형식의 해당 환자 해당 입력 시간의 record 1개)
url : get_select_record/1?input_time=2023-02-13%2008%3A53%3A06
pid,
input_time : str ('2023-02-13 08:53:06')


환자의 레코드 업데이트하기(return : record_all_view형식의 업데이트된 환자 정보 1개)
url : update_record/1
  { 
    "pid": 1,
    "p_record_seq": 2,
    "input_time": "2023-02-13T04:53:06",
    "hr": 111,
    "temp": 36.7,
    "resp": 43,
    "sbp": 127,
    "dbp": 62
  }

